version: "3.8"

services:
  manager-service:
    build: .
    container_name: "game-service"
    expose:
      - "8080"
    environment:
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=coin
      - DATABASE_HOST=db
      - SERVER_PORT=8080
      - SECRET=0hTBL4aYdp0EtnQS7LmQaxWWDZ3k3CRo/ibK1nOTnCM=
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
      - web

  db:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: coin
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d coin'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - manager-service
    networks:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c"
    command: >
      "sleep 5 &&
      certbot certonly --webroot -w /var/www/certbot
      --email your@email.com --agree-tos --no-eff-email
      -d yourdomain.com"
    networks:
      - web

networks:
  internal:
  web:
